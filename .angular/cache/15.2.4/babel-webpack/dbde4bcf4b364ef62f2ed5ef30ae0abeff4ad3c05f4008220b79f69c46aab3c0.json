{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http'; // Import HttpHeaders\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let BugService = /*#__PURE__*/(() => {\n  class BugService {\n    constructor(http) {\n      this.http = http;\n      this.bugChangedEvent = new Subject();\n      this.bugposts = [];\n      this.apiUrl = 'http://cloud.mongodb.com/api/atlas/v1.0/groups/bug-tracker-proj/clusters/maincluster/databases/Bugs/collections/BugPosts?apiKey=xsybxoda';\n      this.getBugs();\n    }\n    getBugs() {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET',\n        'Access-Control-Allow-Headers': 'X-Requested-With,content-type'\n      });\n      const options = {\n        headers: headers\n      };\n      this.http.get(this.apiUrl, options).subscribe(data => {\n        // process the data\n        console.log(data);\n      });\n    }\n    getBug(id) {\n      const url = `${this.apiUrl}/${id}`;\n      return this.http.get(url);\n    }\n    addBug(bug) {\n      return this.http.post(this.apiUrl, bug);\n    }\n    updateBug(id, bug) {\n      const url = `${this.apiUrl}/${id}`;\n      return this.http.put(url, bug);\n    }\n    deleteBug(id) {\n      const url = `${this.apiUrl}/${id}`;\n      return this.http.delete(url);\n    }\n  }\n  BugService.ɵfac = function BugService_Factory(t) {\n    return new (t || BugService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  BugService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BugService,\n    factory: BugService.ɵfac,\n    providedIn: 'root'\n  });\n  return BugService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}