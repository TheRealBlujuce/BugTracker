{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nlet BugDetailComponent = class BugDetailComponent {\n  constructor(bugService) {\n    this.bugService = bugService;\n    // Define the selectedBug property to receive the selected bug from the bug-grid component\n    this.selectedBug = null;\n    this.previousBug = null;\n    this.bugCreated = new EventEmitter();\n    this.newBug = {\n      title: '',\n      priority: '',\n      dateCreated: new Date().toDateString(),\n      description: ''\n    };\n    this.isEditMode = false;\n    this.isCreating = false;\n    this.bugTitle = \"\";\n    this.bugPriority = \"\";\n    this.bugDescription = \"\";\n  }\n  ngOnInit() {}\n  createBug() {\n    if (this.previousBug == null) {\n      this.previousBug = this.selectedBug;\n      console.log(this.previousBug);\n    }\n    this.selectedBug = this.isCreating ? this.previousBug : null;\n    this.isCreating = !this.isCreating;\n  }\n  saveBug(form) {\n    if (form.invalid) {\n      console.log(\"All fields must be filled out before submitting\");\n      return;\n    }\n    const today = new Date();\n    if (this.isCreating) {\n      this.newBug = {\n        title: form.value.title,\n        priority: form.value.priority,\n        dateCreated: today.toDateString(),\n        description: form.value.description\n      };\n      this.bugCreated.emit(this.newBug);\n      this.bugService.addBug(this.newBug);\n    } else if (this.selectedBug) {\n      this.bugTitle = form.value.title;\n      this.bugPriority = form.value.priority;\n      if (form.value.description != null) {\n        this.bugDescription = form.value.description;\n      } else {\n        this.bugDescription = this.selectedBug.description;\n      }\n      this.newBug = {\n        title: this.bugTitle,\n        priority: this.bugPriority,\n        dateCreated: this.selectedBug.dateCreated,\n        description: this.bugDescription\n      };\n      this.bugCreated.emit(this.newBug);\n      this.bugService.updateBug(this.selectedBug, this.newBug);\n      this.selectedBug = this.newBug;\n      console.log(this.selectedBug);\n    }\n    this.isEditMode = false;\n    this.isCreating = false;\n  }\n  deleteBug() {\n    if (this.selectedBug) {\n      this.bugService.deleteBug(this.selectedBug);\n      this.selectedBug = null;\n    }\n  }\n  editBug() {\n    this.isEditMode = !this.isEditMode;\n  }\n};\n__decorate([Input()], BugDetailComponent.prototype, \"selectedBug\", void 0);\n__decorate([Input()], BugDetailComponent.prototype, \"previousBug\", void 0);\n__decorate([Output()], BugDetailComponent.prototype, \"bugCreated\", void 0);\nBugDetailComponent = __decorate([Component({\n  selector: 'app-bug-detail',\n  templateUrl: './bug-detail.component.html',\n  styleUrls: ['./bug-detail.component.css']\n})], BugDetailComponent);\nexport { BugDetailComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}