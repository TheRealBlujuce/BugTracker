{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let BugService = /*#__PURE__*/(() => {\n  class BugService {\n    constructor(http) {\n      this.http = http;\n      this.bugChangedEvent = new Subject();\n      this.bugposts = [];\n      this.apiUrl = 'https://us-east-1.aws.data.mongodb-api.com/app/data-ddgow/endpoint/data/v1/Bugs/BugPosts/find';\n      this.getBugs();\n    }\n    getBugs() {\n      this.http.get(this.apiUrl).pipe(catchError(error => {\n        console.error(error);\n        return throwError(error);\n      })).subscribe(bugs => {\n        this.bugposts = bugs;\n        this.bugChangedEvent.next(this.bugposts);\n      });\n    }\n    // getBug(id: string): Observable<Bug> {\n    //   const url = `${this.apiUrl}/${id}`;\n    //   return this.http.get<Bug>(url);\n    // }\n    addBug(bug) {\n      console.log(bug);\n      return bug;\n    }\n  }\n  BugService.ɵfac = function BugService_Factory(t) {\n    return new (t || BugService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  BugService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BugService,\n    factory: BugService.ɵfac,\n    providedIn: 'root'\n  });\n  return BugService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}