{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./bug-grid/bug-grid.component\";\nimport * as i2 from \"./bug-detail/bug-detail.component\";\nexport class AppComponent {\n  constructor() {\n    this.title = 'bug-tracker';\n    this.selectedBug = null;\n  }\n  onBugSelected(bug) {\n    this.selectedBug = bug;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"col1\"], [3, \"selectedBug\"], [1, \"col2\"], [3, \"bugSelected\", \"isCreating\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"app-bug-detail\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"app-bug-grid\", 4);\n      i0.ɵɵlistener(\"bugSelected\", function AppComponent_Template_app_bug_grid_bugSelected_4_listener($event) {\n        return ctx.selectedBug = $event;\n      })(\"isCreating\", function AppComponent_Template_app_bug_grid_isCreating_4_listener() {\n        return false;\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"selectedBug\", ctx.selectedBug);\n    }\n  },\n  dependencies: [i1.BugGridComponent, i2.BugDetailComponent],\n  styles: [\"@import url(https://fonts.googleapis.com/css2?family=Noto+Sans+JP&display=swap);\\r\\n[_ngcontent-%COMP%]:root {\\r\\n    \\r\\n    --font: \\\"Noto Sans JP\\\";\\r\\n}\\r\\n\\r\\n.container[_ngcontent-%COMP%] {\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); \\r\\n  grid-gap: 20px; \\r\\n  justify-content: center; \\r\\n  align-content: center; \\r\\n}\\r\\n\\r\\n.col1[_ngcontent-%COMP%] {\\r\\n  padding: 32px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.col2[_ngcontent-%COMP%] {\\r\\n  padding: 32px;\\r\\n  width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUlBO0lBQ0ksMkJBQTJCO0lBQzNCLHNCQUFzQjtBQUMxQjs7QUFFQTtFQUNFLGFBQWE7RUFDYiwyREFBMkQsRUFBRSxpRUFBaUU7RUFDOUgsY0FBYyxFQUFFLHVDQUF1QztFQUN2RCx1QkFBdUIsRUFBRSxvQ0FBb0M7RUFDN0QscUJBQXFCLEVBQUUsK0JBQStCO0FBQ3hEOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixXQUFXO0FBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9Tm90bytTYW5zK0pQJmRpc3BsYXk9c3dhcCcpO1xyXG5cclxuXHJcbjpyb290IHtcclxuICAgIC8qIGltcG9ydCB0aGUgZm9udCBnYW1pbHkgKi9cclxuICAgIC0tZm9udDogXCJOb3RvIFNhbnMgSlBcIjtcclxufVxyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDI1MHB4LCAxZnIpKTsgLyogRmlyc3QgY29sdW1uIHRha2VzIDEvMyBvZiB0aGUgc3BhY2UsIHNlY29uZCBjb2x1bW4gdGFrZXMgMi8zICovXHJcbiAgZ3JpZC1nYXA6IDIwcHg7IC8qIEFkZCBzb21lIHNwYWNlIGJldHdlZW4gdGhlIGNvbHVtbnMgKi9cclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgLyogQ2VudGVyIHRoZSBjb2x1bW5zIGhvcml6b250YWxseSAqL1xyXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjsgLyogQ2VudGVyIHRoZSByb3dzIHZlcnRpY2FsbHkgKi9cclxufVxyXG5cclxuLmNvbDEge1xyXG4gIHBhZGRpbmc6IDMycHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5jb2wyIHtcclxuICBwYWRkaW5nOiAzMnB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,YAAY;EALzBC;IAME,UAAK,GAAG,aAAa;IAErB,gBAAW,GAAe,IAAI;;EAG9BC,aAAa,CAACC,GAAQ;IACpB,IAAI,CAACC,WAAW,GAAGD,GAAG;EACxB;;AARWH,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAK;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRzBC,8BAAuB;MAEnBA,oCAA6D;MAC/DA,iBAAM;MACNA,8BAAkB;MACFA;QAAA;MAAA,EAAoC;QAAA,OAAe,KAAK;MAAA,EAApB;MAAsBA,iBAAe;;;MAHvEA,eAA2B;MAA3BA,6CAA2B","names":["AppComponent","constructor","onBugSelected","bug","selectedBug","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Kobe\\Documents\\GitHub\\WDD430\\final\\bug-tracker\\src\\app\\app.component.ts","C:\\Users\\Kobe\\Documents\\GitHub\\WDD430\\final\\bug-tracker\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Bug } from './bug.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'bug-tracker';\n\n  selectedBug: Bug | null = null;\n\n\n  onBugSelected(bug: Bug) {\n    this.selectedBug = bug;\n  }\n}\n","<div class=\"container\">\n  <div class=\"col1\">\n    <app-bug-detail [selectedBug]=\"selectedBug\"></app-bug-detail>\n  </div>\n  <div class=\"col2\">\n    <app-bug-grid (bugSelected)=\"selectedBug = $event\" (isCreating)=\"false\"></app-bug-grid>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}