{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction BugGridComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function BugGridComponent_div_4_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const bug_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onBugCardClick(bug_r1));\n    });\n    i0.ɵɵelementStart(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const bug_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(bug_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Created on: \", bug_r1.dateCreated, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Priority: \", bug_r1.priority, \"\");\n  }\n}\nexport let BugGridComponent = /*#__PURE__*/(() => {\n  class BugGridComponent {\n    constructor() {\n      this.bugSelected = new EventEmitter();\n      this.bugs = [{\n        title: \"Login page not working\",\n        description: \"When I try to log in, the page just refreshes and nothing happens.\",\n        priority: \"High\",\n        dateCreated: new Date(\"2022-12-15T08:30:00.000Z\")\n      }, {\n        title: \"Unable to add items to cart\",\n        description: \"I keep getting an error message when I try to add items to my cart.\",\n        priority: \"Medium\",\n        dateCreated: new Date(\"2022-12-16T11:45:00.000Z\")\n      }, {\n        title: \"Payment page not loading\",\n        description: \"When I click on 'Pay Now', the page just keeps loading and never finishes.\",\n        priority: \"High\",\n        dateCreated: new Date(\"2022-12-17T15:20:00.000Z\")\n      }, {\n        title: \"Images not displaying\",\n        description: \"The images on the product pages are not displaying properly.\",\n        priority: \"Low\",\n        dateCreated: new Date(\"2022-12-18T10:10:00.000Z\")\n      }, {\n        title: \"Broken link on homepage\",\n        description: \"The link to the 'About Us' page on the homepage is broken.\",\n        priority: \"Medium\",\n        dateCreated: new Date(\"2022-12-19T14:00:00.000Z\")\n      }, {\n        title: \"Login page not working\",\n        description: \"When I try to log in, the page just refreshes and nothing happens.\",\n        priority: \"High\",\n        dateCreated: new Date(\"2022-12-15T08:30:00.000Z\")\n      }, {\n        title: \"Unable to add items to cart\",\n        description: \"I keep getting an error message when I try to add items to my cart.\",\n        priority: \"Medium\",\n        dateCreated: new Date(\"2022-12-16T11:45:00.000Z\")\n      }, {\n        title: \"Payment page not loading\",\n        description: \"When I click on 'Pay Now', the page just keeps loading and never finishes.\",\n        priority: \"High\",\n        dateCreated: new Date(\"2022-12-17T15:20:00.000Z\")\n      }, {\n        title: \"Images not displaying\",\n        description: \"The images on the product pages are not displaying properly.\",\n        priority: \"Low\",\n        dateCreated: new Date(\"2022-12-18T10:10:00.000Z\")\n      }, {\n        title: \"Broken link on homepage\",\n        description: \"The link to the 'About Us' page on the homepage is broken.\",\n        priority: \"Medium\",\n        dateCreated: new Date(\"2022-12-19T14:00:00.000Z\")\n      }];\n    }\n    // Define the onBugCardClick method to set the selected bug and show the detail view\n    onBugCardClick(bug) {\n      this.bugSelected.emit(bug); // Emit an event with the selected bug\n    }\n  }\n\n  BugGridComponent.ɵfac = function BugGridComponent_Factory(t) {\n    return new (t || BugGridComponent)();\n  };\n  BugGridComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BugGridComponent,\n    selectors: [[\"app-bug-grid\"]],\n    outputs: {\n      bugSelected: \"bugSelected\"\n    },\n    decls: 5,\n    vars: 1,\n    consts: [[1, \"bug-grid-container\"], [1, \"bug-grid\", \"clicked\"], [\"class\", \"bug-card\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"bug-card\", 3, \"click\"]],\n    template: function BugGridComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Current Bugs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1);\n        i0.ɵɵtemplate(4, BugGridComponent_div_4_Template, 7, 3, \"div\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.bugs);\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\"@import\\\"https://fonts.googleapis.com/css2?family=Noto+Sans+JP&display=swap\\\";[_ngcontent-%COMP%]:root{--font: \\\"Noto Sans JP\\\"}.bug-grid-container[_ngcontent-%COMP%]{height:640px;width:85%;overflow-y:scroll}.bug-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(250px,1fr));grid-gap:1rem;padding:24px;width:90%}.bug-card[_ngcontent-%COMP%]{font-family:Noto Sans JP,sans-serif;transition-duration:.25s;padding:12px;border-radius:24px;box-shadow:0 0 24px #3337;width:85%;height:150px;background-color:#fff;color:#000}.bug-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{padding-left:16px;font-weight:600;margin-top:2px;font-size:.9rem}.bug-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{padding-left:16px;margin-top:2px;font-weight:900;font-size:1.25rem}.bug-card[_ngcontent-%COMP%]:hover{transition-duration:.5s;background-color:#000;color:#fff;cursor:pointer;width:95%}h1[_ngcontent-%COMP%]{font-family:Noto Sans JP,sans-serif}\"]\n  });\n  return BugGridComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}